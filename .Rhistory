add2 <- function(x,y)
{
x+y
}
add2(3,5)
dir()
above <- function(x, n=10){
use <- x> n
x[Use]
}
above(1:20)
x<-1:20
above(x)
above(x,12)
above <- function(x, n=10){
use <- x> n
x[use]
}
above <- function(x, n=10){
use <- x> n
x[use]
}
x<-1:20
above(x)
above(x,17)
above(x)
dir
dir()
getwd()
getwd()
setwd("C:\Users\VVENKA01\Personal\Data Science Course\2 R Programming\Week 3")
setwd("C:\Users\VVENKA01\Personal\Data Science Course"")
setwd("C:\Users\VVENKA01\Personal\Data Science Course")
setwd("C:\Users\VVENKA01\Personal\Data Science Course")
library(datasets)
data("iris")
?iris
Sepal.Length("iris")
packages<-c("data.table","xlsx","XML")
sapply(packages, require, character.only=TRUE,quitly=TRUE)
sapply(packages, require, character.only=TRUE,quiEtly=TRUE)
sapply(packages, require, character.only=TRUE,quietly=TRUE)
install.packages("data.table")
library("data.table")
packages <- c("data.table", "xlsx", "XML")
sapply(packages, require, character.only = TRUE, quietly = TRUE)
library(data.table)
sapply(packages, require, character.only = TRUE, quietly = TRUE)
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FPUMSDataDict06.pdf"
f <- file.path(getwd(), "PUMSDataDict06.pdf")
download.file(url, f, mode = "wb")
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
f <- file.path(getwd(), "ss06hid.csv")
download.file(url, f)
dt <- data.table(read.csv(f))
setkey(dt, VAL)
dt[, .N, key(dt)]
setkey(dt, VAL)
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
f <- file.path(getwd(), "DATA.gov_NGAP.xlsx")
download.file(url, f, mode = "wb")
rows <- 18:23
cols <- 7:15
dat <- read.xlsx(f, 1, colIndex = cols, rowIndex = rows)
library(XLConnect)
packages("data.table")
install.packages("data.table")
install.packages("data.table")
library("data.table")
dat <- read.xlsx(f, 1, colIndex = cols, rowIndex = rows)
packages <- c("data.table", "xlsx", "XML")
sapply(packages, require, character.only = TRUE, quietly = TRUE)
dat <- read.xlsx(f, 1, colIndex = cols, rowIndex = rows)
library(data.table)
DF = data.frame(x=rnorm(9),y=rep(c("a","b","c"),each=3),z=rnorm(9))
head(DF,3)
tables()
dt[2,1]
dt[2,3]
DT=data.table(x=rnorm(9))
head(dt)
View(DT)
View(DF)
View(DT)
DT1 = data.table(x=rnorm(9),y=rep(c("a","b","c"),each=3),z=rnorm(9))
head(DT1,3)
install.packages("swirl")
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
mydf<=read.csv(path2csv,stringsAsFactors = FALSE)
mydf <- read.csv(path2csv,stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran,ip_id,package,country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran,-(x:size))
select(cran,-x:size)
select(cran,-x)
select(cran, country:r_arch)
select(cran,-(X:size))
filter(cran, package="swirl")
filter(cran, package=="swirl")
filter(cran, country=="US", r_arch=="i384")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, country=="IN", version <= "3.0.2")
filter(cran, r_version <= "3.0.2", country == "IN")
| == "US" | country == "IN")
filter(cran, country=="US"|country=="IN")
filter(cran, size>100500)
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran, !is.na(r_version)
)
cran2 <- select(cran, size:ip_id)
arrange(cran2,ip_id)
arrange(cran2,desc(ip_id))
arange(cran2, package, ip_id)
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version),ip_id)
cran3<- seelct(cran, ip_id, package, size)
cran3<- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb/2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb/2^10)
mutate(cran3, correct_size =  size-1000)
mutate(cran3, correct_size =  size+1000)
summarize(cran, avg_bytes = mean(size)
)
file.url <- 'https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv'
file.dest <- 'ACS4.csv'
download.file(file.url, file.dest, method='curl')
download.file(file.url, file.dest)
ACS <- read.csv(file.dest)
names <- names(ACS)
strsplit(names, 'wgtp')[123]
file.url <- 'https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv'
file.dest <- 'GDP4.csv'
download.file(file.url, file.dest, method='wget')
download.file(file.url, file.dest)
GDP <- read.csv(file.dest, skip=4, nrows=190)
GDPdol <- gsub(",", "", GDP$X.4)
GDPdol <- as.integer(GDPdol)
mean(GDPdol, na.rm=TRUE)
attach(GDP)
grep("^United",GDP$V4)
grep("^United",countryNames), 3
grep("^United",countryNames)
grep("^United",CountryNames)
file.url <- 'https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv'
file.dest <- 'GDP4.csv'
source('~/.active-rstudio-document')
file.url <- 'https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv'
file.dest <- 'GDP4.csv'
download.file(file.url, file.dest)
GDP <- read.csv(file.dest, skip=4, nrows=190)
file.url <- 'https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv'
file.dest <- 'edu.csv'
download.file(file.url, file.dest)
edu <- read.csv(file.dest)
merged <- merge(GDP, edu, by.x = 'X', by.y = 'CountryCode')
fy.june <- grep('Fiscal year end: June', merged$Special.Notes)
length(fy.june)
install.packages('quantmod')
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
year2012 <- grepl('2012-*', sampleTimes)
table(year2012)
sampleTimes2012 <- subset(sampleTimes, year2012)
day <- format(sampleTimes2012, '%A')
table(day)
install.packages("swirl")
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
library(dplyr)
cran <- tbl_df('data frame tlb')
cran <- tbl_df(data frame tlb)
mydf
cran <- tbl_df(mydf)
rm("mydf")
cran
help group_by()
help group_by
help("group_by")
?group_by
by_package <- group_by(cran,"package")
by_package <- group_by(cran,package)
by_package
summarise(cran)
summarise(by_package, mean(size))
countries ='US',
source('C:/Users/VVENKA01/AppData/Local/Temp/RtmpwJ6Hxp/summarize1.R')
avg_bytes = 10)
SUBMIT()
submit()
reset()
source('C:/Users/VVENKA01/AppData/Local/Temp/RtmpwJ6Hxp/summarize1.R')
avg_bytes =1 )
?n
?n_distinct
unique = TRUE,
unique = 1,
avg_bytes =1 );
avg_bytes =mean(size) );
avg_bytes =mean(size) )
source('C:/Users/VVENKA01/AppData/Local/Temp/RtmpwJ6Hxp/summarize1.R')
avg_bytes =mean(size) )
pack_sum
reset()
?n
?n_distinct
unique = n_distinct(ip_id) ,
countries = n_distinct(country),
countries = n_distinct(country),
countries = n_distinct(country)
pack_sum <- summarize(by_package,
count = n(),
unique = n_distinct(ip_id),
countries = n_distinct(country),
avg_bytes = mean(size))
source('C:/Users/VVENKA01/AppData/Local/Temp/RtmpwJ6Hxp/summarize1.R')
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
filter(pack_sum,count > 679)
top_counts <- filter(pack_sum,679)
top_counts <- filter(pack_sum,count > 679)
top_counts
view(top_counts)
View(top_counts)
top_counts_sorted <- arrange(top_counts, count)
top_counts_sorted <- arrange(top_counts,desc(count)
)
View(top_counts)
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
top_unique <- filter(pack_sum, unique>465)
View(top_unique)
top_unique_sorted <- arrange(top_unique, desc(unique.numeric_version()))
top_unique_sorted <- arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
source('C:/Users/VVENKA01/AppData/Local/Temp/RtmpwJ6Hxp/chain1.R')
submit()
submit()
submit()
submit()
submit()
submit()
?mutate
?mutate
submit()
submit()
submit()
reset()
submit()
submit()
submit()
submit()
submit()
cran
select(ip_id, country, package, size)
select(ip_id, country, package, size)
submit()
submit()
pack_sum
submit()
reset()
submit()
submit()
submit()
submit()
submit()
reset()
cran
reset()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
print
source('C:/Users/VVENKA01/AppData/Local/Temp/RtmpwJ6Hxp/chain2.R')
submit()
submit()
submit()
submit()
select(ip_id, country, package, size)
?mutate
mutate(size_mb = size / 2^20) %>%
filter(size_mb <= 0.5) %>%
# Your call to arrange() goes here
arrange(desc(size_mb))
submit()
getwd()
dir()
swril()
swirl()
swirl()
library(dplyr)
cran <- tbl_df('data frame tlb')
cran <- tbl_df('data frame tlb')
mydf
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package <- group_by(cran, package)
by_package
summarize(by_package, mean(size))
submit()
print()
print(pack_sum)
quantile(pack_sum$count, probs = 0.99)
top_counts <- filter(pack_sum, count > 679)
top_counts
View(top_counts)
top_counts_sorted <- arrage(top_counts, desc(count))
top_counts_sorted <- arrage(top_counts, desc(count))
top_counts_sorted <- arrange(top_counts, desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99
)
top_unique <- filter(unique > 465)
top_unique <- filter(pack_sum,unique > 465)
View(top_unique)
top_unique_sorted <- arrange(pack_sum, desc(unique))
top_unique_sorted <- arrange(pack_sum, desc(unique))
arrange(top_unique, desc(unique))
top_unique_sorted <-arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
submit()
submit()
submit()
sampleTimes2012 <- subset(sampleTimes, year2012)
curl
?curl
x<- c(1,10,15, 20)
x
y <- c(a,b)
y <- c("a","b")
y
plot(x,y)
y <- c("a","b","c","d")
plot(x,y)
hist(x)
hist(x,y)
y<- c(100,200,300,4)
y<- c(100,200,300,400)
plot(x,y)
x
x<- c(90,80,75,60)
plot(x,y)
dir()
getwd()
q()
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality)
library(lattice)
qplot(Wind, Ozone, data = airquality)
library(nlme)
library(lattice)
qplot(Wind, Ozone, data = airquality)
install.packages(ggplot2)
install.packages(ggplot)
install.packages("ggplot2")
library(ggplot2)
qplot(Wind, Ozone, data = airquality)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
print(g)
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies) + stats_smooth("loess"))
qplot(votes, rating, data = movies) + geom_smooth()
xyplot(weight ~ Time | Diet, BodyWeight)
qplot(votes, rating, data = movies) + geom_smooth()
library(swirl)
swirl()
install_from_swirl("Exploratory Data Analysis")
library(swirl)
library(swirl)
install_from_swirl("Exploratory Data Analysis")
ls()
rm(list=ls())
ls()
library(swirl)
swirl()
swirl()
plot(speed, dist)
library(swirl)
swirl()
skip()
skip()
skip()
skip()
qt(.95)
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
mybin
skip()
skip()
skip()
q()
library(knitr)
install.pacakges("stringi")
install.packages("stringi")
install.packages("knitr")
library(stringi)
library(knitr)
swirl()
install.packages("swirl")
packageVersion("swirl")
install_from_swirl("Regression Models")
library("swirl")
swirl()
plot(child ~ parent, galton)
"plot(jitter(child,4) ~ parent,galton)"
plot(jitter(child,4) ~ parent,galton)
regrline <- lm(child ~ parent, galton)
abline(regrline, lwd=3, col='red')
summary(regrline)
q()
library(swirl)
swril
swirl
swirl()
plot(child ~ parent, galton)
plot(jitter(child,4) ~ parent,galton)
regrline <- lm(child ~ parent, galton)
abline(regrline, lwd=3, col='red')
summary(regrline)
swirl()
skip()
summary(fit)
mean(fit$residuals)
cov(fit$residuals, galton$parent)
fit$coef[1]
ols.ic <- fit$coef[1]
ols.slope <- fit$coef[2]
rhs - lhs
lhs-rhs
all.equal(lhs,rhs)
varChild <- var()
skip()
varRes <- var(fit$residuals)
skip()
skip()
efit <- lm(accel ~ mag+dist, attenu)
mean(efit)
mean(efit$residuals)"
mean(efit$residuals)
cov(attenu$mag)
skip()
cov(efit$residuals, attenu$mag)
cov(efit$residuals, attenu$dist)
cor(gpa_nor, gch_nor)
skip()
q()
setwd("C:/Users/VVENKA01/Personal/Data Science Course/08 Practical Machine Learning")
ls
dir()
ls()
getwd()
str(training, list.len=15)
install.packages("caret")
library(caret)
